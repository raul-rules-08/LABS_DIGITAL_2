

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jan 31 22:08:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0008                     _PORTD	set	8
   206  0007                     _PORTC	set	7
   207  0006                     _PORTB	set	6
   208  0008                     _PORTDbits	set	8
   209  0007                     _PORTCbits	set	7
   210  0006                     _PORTBbits	set	6
   211  0009                     _PORTEbits	set	9
   212  0089                     _TRISE	set	137
   213  0087                     _TRISC	set	135
   214  0088                     _TRISD	set	136
   215  0086                     _TRISB	set	134
   216  0188                     _ANSEL	set	392
   217  0189                     _ANSELH	set	393
   218                           
   219                           	psect	cinit
   220  07F8                     start_initialization:	
   221                           ; #config settings
   222                           
   223  07F8                     __initialization:
   224                           
   225                           ; Clear objects allocated to COMMON
   226  07F8  01F0               	clrf	__pbssCOMMON& (0+127)
   227  07F9  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   228  07FA  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   229  07FB  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   230  07FC                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233  07FC                     __end_of__initialization:
   234  07FC  0183               	clrf	3
   235  07FD  120A  118A  2F97   	ljmp	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMMON
   238  0070                     __pbssCOMMON:
   239  0070                     _cont2:
   240  0070                     	ds	2
   241  0072                     _cont:
   242  0072                     	ds	2
   243                           
   244                           	psect	cstackCOMMON
   245  0074                     __pcstackCOMMON:
   246  0074                     ?_config:
   247  0074                     ??_config:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0074                     ?_LIGTHS_OUT:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0074                     ??_LIGTHS_OUT:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0074                     ?_PLAYER_1:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0074                     ??_PLAYER_1:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0074                     ?_PLAYER_2:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0074                     ??_PLAYER_2:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0074                     ?_main:	
   269                           ; 1 bytes @ 0x0
   270                           
   271                           
   272                           ; 1 bytes @ 0x0
   273  0074                     	ds	2
   274  0076                     ??_main:
   275                           
   276                           ; 1 bytes @ 0x2
   277  0076                     	ds	2
   278                           
   279                           	psect	maintext
   280  0797                     __pmaintext:	
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 44 in file "SPEED_RACE_8.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : B00/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   300 ;;      Params:         0       0       0       0       0
   301 ;;      Locals:         0       0       0       0       0
   302 ;;      Temps:          2       0       0       0       0
   303 ;;      Totals:         2       0       0       0       0
   304 ;;Total ram usage:        2 bytes
   305 ;; Hardware stack levels required when called:    1
   306 ;; This function calls:
   307 ;;		_LIGTHS_OUT
   308 ;;		_PLAYER_1
   309 ;;		_PLAYER_2
   310 ;;		_config
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           
   317                           ;psect for function _main
   318  0797                     _main:
   319  0797                     l754:	
   320                           ;incstack = 0
   321                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   322                           
   323                           
   324                           ;SPEED_RACE_8.c: 46:     config();
   325  0797  120A  118A  26DA  120A  118A  	fcall	_config
   326  079C                     l756:
   327                           
   328                           ;SPEED_RACE_8.c: 48:     if (PORTEbits.RE0 == 1){
   329  079C  1283               	bcf	3,5	;RP0=0, select bank0
   330  079D  1303               	bcf	3,6	;RP1=0, select bank0
   331  079E  1C09               	btfss	9,0	;volatile
   332  079F  2FA1               	goto	u151
   333  07A0  2FA2               	goto	u150
   334  07A1                     u151:
   335  07A1  2FF5               	goto	l54
   336  07A2                     u150:
   337  07A2                     l758:
   338                           
   339                           ;SPEED_RACE_8.c: 49:         LIGTHS_OUT();
   340  07A2  120A  118A  26ED  120A  118A  	fcall	_LIGTHS_OUT
   341  07A7                     l760:
   342                           
   343                           ;SPEED_RACE_8.c: 50:         if(PORTBbits.RB2 == 1){
   344  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   345  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   346  07A9  1D06               	btfss	6,2	;volatile
   347  07AA  2FAC               	goto	u161
   348  07AB  2FAD               	goto	u160
   349  07AC                     u161:
   350  07AC  2FF5               	goto	l54
   351  07AD                     u160:
   352  07AD  2FDA               	goto	l778
   353  07AE                     l764:
   354                           
   355                           ;SPEED_RACE_8.c: 52:                 _delay((unsigned long)((30)*(8000000/4000.0)));
   356  07AE  304E               	movlw	78
   357  07AF  00F7               	movwf	??_main+1
   358  07B0  30EB               	movlw	235
   359  07B1  00F6               	movwf	??_main
   360  07B2                     u217:
   361  07B2  0BF6               	decfsz	??_main,f
   362  07B3  2FB2               	goto	u217
   363  07B4  0BF7               	decfsz	??_main+1,f
   364  07B5  2FB2               	goto	u217
   365  07B6                     l766:
   366                           
   367                           ;SPEED_RACE_8.c: 53:                 if (PORTCbits.RC0 == 1){
   368  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   369  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   370  07B8  1C07               	btfss	7,0	;volatile
   371  07B9  2FBB               	goto	u171
   372  07BA  2FBC               	goto	u170
   373  07BB                     u171:
   374  07BB  2FC4               	goto	l770
   375  07BC                     u170:
   376  07BC                     l768:
   377                           
   378                           ;SPEED_RACE_8.c: 54:                     cont = cont+1;
   379  07BC  0872               	movf	_cont,w
   380  07BD  3E01               	addlw	1
   381  07BE  00F2               	movwf	_cont
   382  07BF  0873               	movf	_cont+1,w
   383  07C0  1803               	skipnc
   384  07C1  3E01               	addlw	1
   385  07C2  3E00               	addlw	0
   386  07C3  00F3               	movwf	_cont+1
   387  07C4                     l770:
   388                           
   389                           ;SPEED_RACE_8.c: 56:                 if (PORTDbits.RD0 == 1){
   390  07C4  1C08               	btfss	8,0	;volatile
   391  07C5  2FC7               	goto	u181
   392  07C6  2FC8               	goto	u180
   393  07C7                     u181:
   394  07C7  2FD0               	goto	l774
   395  07C8                     u180:
   396  07C8                     l772:
   397                           
   398                           ;SPEED_RACE_8.c: 57:                     cont2 = cont2+1;
   399  07C8  0870               	movf	_cont2,w
   400  07C9  3E01               	addlw	1
   401  07CA  00F0               	movwf	_cont2
   402  07CB  0871               	movf	_cont2+1,w
   403  07CC  1803               	skipnc
   404  07CD  3E01               	addlw	1
   405  07CE  3E00               	addlw	0
   406  07CF  00F1               	movwf	_cont2+1
   407  07D0                     l774:
   408                           
   409                           ;SPEED_RACE_8.c: 59:             PLAYER_1();
   410  07D0  120A  118A  270B  120A  118A  	fcall	_PLAYER_1
   411  07D5                     l776:
   412                           
   413                           ;SPEED_RACE_8.c: 60:             PLAYER_2();
   414  07D5  120A  118A  2751  120A  118A  	fcall	_PLAYER_2
   415  07DA                     l778:
   416                           
   417                           ;SPEED_RACE_8.c: 51:             while ( cont < 8 && cont2 < 8) {
   418  07DA  0873               	movf	_cont+1,w
   419  07DB  3A80               	xorlw	128
   420  07DC  00FF               	movwf	btemp+1
   421  07DD  3080               	movlw	128
   422  07DE  027F               	subwf	btemp+1,w
   423  07DF  1D03               	skipz
   424  07E0  2FE3               	goto	u195
   425  07E1  3008               	movlw	8
   426  07E2  0272               	subwf	_cont,w
   427  07E3                     u195:
   428  07E3  1803               	skipnc
   429  07E4  2FE6               	goto	u191
   430  07E5  2FE7               	goto	u190
   431  07E6                     u191:
   432  07E6  2FF5               	goto	l46
   433  07E7                     u190:
   434  07E7                     l780:
   435  07E7  0871               	movf	_cont2+1,w
   436  07E8  3A80               	xorlw	128
   437  07E9  00FF               	movwf	btemp+1
   438  07EA  3080               	movlw	128
   439  07EB  027F               	subwf	btemp+1,w
   440  07EC  1D03               	skipz
   441  07ED  2FF0               	goto	u205
   442  07EE  3008               	movlw	8
   443  07EF  0270               	subwf	_cont2,w
   444  07F0                     u205:
   445  07F0  1C03               	skipc
   446  07F1  2FF3               	goto	u201
   447  07F2  2FF4               	goto	u200
   448  07F3                     u201:
   449  07F3  2FAE               	goto	l764
   450  07F4                     u200:
   451  07F4  2FF5               	goto	l54
   452  07F5                     l46:	
   453                           ;SPEED_RACE_8.c: 63:         }
   454                           
   455  07F5                     l54:
   456  07F5  120A  118A  2800   	ljmp	start
   457  07F8                     __end_of_main:
   458                           
   459                           	psect	text1
   460  06DA                     __ptext1:	
   461 ;; *************** function _config *****************
   462 ;; Defined at:
   463 ;;		line 69 in file "SPEED_RACE_8.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   477 ;;      Params:         0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0
   480 ;;      Totals:         0       0       0       0       0
   481 ;;Total ram usage:        0 bytes
   482 ;; Hardware stack levels used:    1
   483 ;; This function calls:
   484 ;;		Nothing
   485 ;; This function is called by:
   486 ;;		_main
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           
   491                           ;psect for function _config
   492  06DA                     _config:
   493  06DA                     l672:	
   494                           ;incstack = 0
   495                           ; Regs used in _config: [wreg+status,2]
   496                           
   497                           
   498                           ;SPEED_RACE_8.c: 71:         ANSELH = 0 ;
   499  06DA  1683               	bsf	3,5	;RP0=1, select bank3
   500  06DB  1703               	bsf	3,6	;RP1=1, select bank3
   501  06DC  0189               	clrf	9	;volatile
   502                           
   503                           ;SPEED_RACE_8.c: 72:         ANSEL = 0 ;
   504  06DD  0188               	clrf	8	;volatile
   505                           
   506                           ;SPEED_RACE_8.c: 73:         TRISB = 0 ;
   507  06DE  1683               	bsf	3,5	;RP0=1, select bank1
   508  06DF  1303               	bcf	3,6	;RP1=0, select bank1
   509  06E0  0186               	clrf	6	;volatile
   510  06E1                     l674:
   511                           
   512                           ;SPEED_RACE_8.c: 75:         TRISD = 0b00000001;
   513  06E1  3001               	movlw	1
   514  06E2  0088               	movwf	8	;volatile
   515  06E3                     l676:
   516                           
   517                           ;SPEED_RACE_8.c: 76:         TRISC = 0b00000001;
   518  06E3  3001               	movlw	1
   519  06E4  0087               	movwf	7	;volatile
   520  06E5                     l678:
   521                           
   522                           ;SPEED_RACE_8.c: 77:         TRISE = 0b001;
   523  06E5  3001               	movlw	1
   524  06E6  0089               	movwf	9	;volatile
   525  06E7                     l680:
   526                           
   527                           ;SPEED_RACE_8.c: 79:         PORTB = 0 ;
   528  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   529  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   530  06E9  0186               	clrf	6	;volatile
   531  06EA                     l682:
   532                           
   533                           ;SPEED_RACE_8.c: 80:         PORTC = 0 ;
   534  06EA  0187               	clrf	7	;volatile
   535  06EB                     l684:
   536                           
   537                           ;SPEED_RACE_8.c: 81:         PORTD = 0 ;
   538  06EB  0188               	clrf	8	;volatile
   539  06EC                     l57:
   540  06EC  0008               	return
   541  06ED                     __end_of_config:
   542                           
   543                           	psect	text2
   544  0751                     __ptext2:	
   545 ;; *************** function _PLAYER_2 *****************
   546 ;; Defined at:
   547 ;;		line 124 in file "SPEED_RACE_8.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, status,2, status,0
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0
   564 ;;      Totals:         0       0       0       0       0
   565 ;;Total ram usage:        0 bytes
   566 ;; Hardware stack levels used:    1
   567 ;; This function calls:
   568 ;;		Nothing
   569 ;; This function is called by:
   570 ;;		_main
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           
   575                           ;psect for function _PLAYER_2
   576  0751                     _PLAYER_2:
   577  0751                     l726:	
   578                           ;incstack = 0
   579                           ; Regs used in _PLAYER_2: [wreg+status,2+status,0]
   580                           
   581                           
   582                           ;SPEED_RACE_8.c: 126:             if (cont2 == 1){
   583  0751  0370               	decf	_cont2,w
   584  0752  0471               	iorwf	_cont2+1,w
   585  0753  1D03               	btfss	3,2
   586  0754  2F56               	goto	u81
   587  0755  2F57               	goto	u80
   588  0756                     u81:
   589  0756  2F5A               	goto	l730
   590  0757                     u80:
   591  0757                     l728:
   592                           
   593                           ;SPEED_RACE_8.c: 127:                 PORTDbits.RD1 = 1;
   594  0757  1283               	bcf	3,5	;RP0=0, select bank0
   595  0758  1303               	bcf	3,6	;RP1=0, select bank0
   596  0759  1488               	bsf	8,1	;volatile
   597  075A                     l730:
   598                           
   599                           ;SPEED_RACE_8.c: 129:             if (cont2 == 2){
   600  075A  3002               	movlw	2
   601  075B  0670               	xorwf	_cont2,w
   602  075C  0471               	iorwf	_cont2+1,w
   603  075D  1D03               	btfss	3,2
   604  075E  2F60               	goto	u91
   605  075F  2F61               	goto	u90
   606  0760                     u91:
   607  0760  2F64               	goto	l734
   608  0761                     u90:
   609  0761                     l732:
   610                           
   611                           ;SPEED_RACE_8.c: 130:                 PORTDbits.RD2 = 1;
   612  0761  1283               	bcf	3,5	;RP0=0, select bank0
   613  0762  1303               	bcf	3,6	;RP1=0, select bank0
   614  0763  1508               	bsf	8,2	;volatile
   615  0764                     l734:
   616                           
   617                           ;SPEED_RACE_8.c: 132:             if (cont2 == 3){
   618  0764  3003               	movlw	3
   619  0765  0670               	xorwf	_cont2,w
   620  0766  0471               	iorwf	_cont2+1,w
   621  0767  1D03               	btfss	3,2
   622  0768  2F6A               	goto	u101
   623  0769  2F6B               	goto	u100
   624  076A                     u101:
   625  076A  2F6E               	goto	l738
   626  076B                     u100:
   627  076B                     l736:
   628                           
   629                           ;SPEED_RACE_8.c: 133:                 PORTDbits.RD3 = 1;
   630  076B  1283               	bcf	3,5	;RP0=0, select bank0
   631  076C  1303               	bcf	3,6	;RP1=0, select bank0
   632  076D  1588               	bsf	8,3	;volatile
   633  076E                     l738:
   634                           
   635                           ;SPEED_RACE_8.c: 135:             if (cont2 == 4){
   636  076E  3004               	movlw	4
   637  076F  0670               	xorwf	_cont2,w
   638  0770  0471               	iorwf	_cont2+1,w
   639  0771  1D03               	btfss	3,2
   640  0772  2F74               	goto	u111
   641  0773  2F75               	goto	u110
   642  0774                     u111:
   643  0774  2F78               	goto	l742
   644  0775                     u110:
   645  0775                     l740:
   646                           
   647                           ;SPEED_RACE_8.c: 136:                 PORTDbits.RD4 = 1;
   648  0775  1283               	bcf	3,5	;RP0=0, select bank0
   649  0776  1303               	bcf	3,6	;RP1=0, select bank0
   650  0777  1608               	bsf	8,4	;volatile
   651  0778                     l742:
   652                           
   653                           ;SPEED_RACE_8.c: 138:             if (cont2 == 5){
   654  0778  3005               	movlw	5
   655  0779  0670               	xorwf	_cont2,w
   656  077A  0471               	iorwf	_cont2+1,w
   657  077B  1D03               	btfss	3,2
   658  077C  2F7E               	goto	u121
   659  077D  2F7F               	goto	u120
   660  077E                     u121:
   661  077E  2F82               	goto	l746
   662  077F                     u120:
   663  077F                     l744:
   664                           
   665                           ;SPEED_RACE_8.c: 139:                 PORTDbits.RD5 = 1;
   666  077F  1283               	bcf	3,5	;RP0=0, select bank0
   667  0780  1303               	bcf	3,6	;RP1=0, select bank0
   668  0781  1688               	bsf	8,5	;volatile
   669  0782                     l746:
   670                           
   671                           ;SPEED_RACE_8.c: 141:             if (cont2 == 6){
   672  0782  3006               	movlw	6
   673  0783  0670               	xorwf	_cont2,w
   674  0784  0471               	iorwf	_cont2+1,w
   675  0785  1D03               	btfss	3,2
   676  0786  2F88               	goto	u131
   677  0787  2F89               	goto	u130
   678  0788                     u131:
   679  0788  2F8C               	goto	l750
   680  0789                     u130:
   681  0789                     l748:
   682                           
   683                           ;SPEED_RACE_8.c: 142:                 PORTDbits.RD6 = 1;
   684  0789  1283               	bcf	3,5	;RP0=0, select bank0
   685  078A  1303               	bcf	3,6	;RP1=0, select bank0
   686  078B  1708               	bsf	8,6	;volatile
   687  078C                     l750:
   688                           
   689                           ;SPEED_RACE_8.c: 144:             if (cont2 == 7){
   690  078C  3007               	movlw	7
   691  078D  0670               	xorwf	_cont2,w
   692  078E  0471               	iorwf	_cont2+1,w
   693  078F  1D03               	btfss	3,2
   694  0790  2F92               	goto	u141
   695  0791  2F93               	goto	u140
   696  0792                     u141:
   697  0792  2F96               	goto	l80
   698  0793                     u140:
   699  0793                     l752:
   700                           
   701                           ;SPEED_RACE_8.c: 145:                 PORTDbits.RD7 = 1;
   702  0793  1283               	bcf	3,5	;RP0=0, select bank0
   703  0794  1303               	bcf	3,6	;RP1=0, select bank0
   704  0795  1788               	bsf	8,7	;volatile
   705  0796                     l80:
   706  0796  0008               	return
   707  0797                     __end_of_PLAYER_2:
   708                           
   709                           	psect	text3
   710  070B                     __ptext3:	
   711 ;; *************** function _PLAYER_1 *****************
   712 ;; Defined at:
   713 ;;		line 98 in file "SPEED_RACE_8.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;		None
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, status,2, status,0
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   727 ;;      Params:         0       0       0       0       0
   728 ;;      Locals:         0       0       0       0       0
   729 ;;      Temps:          0       0       0       0       0
   730 ;;      Totals:         0       0       0       0       0
   731 ;;Total ram usage:        0 bytes
   732 ;; Hardware stack levels used:    1
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _PLAYER_1
   742  070B                     _PLAYER_1:
   743  070B                     l698:	
   744                           ;incstack = 0
   745                           ; Regs used in _PLAYER_1: [wreg+status,2+status,0]
   746                           
   747                           
   748                           ;SPEED_RACE_8.c: 100:            if (cont == 1){
   749  070B  0372               	decf	_cont,w
   750  070C  0473               	iorwf	_cont+1,w
   751  070D  1D03               	btfss	3,2
   752  070E  2F10               	goto	u11
   753  070F  2F11               	goto	u10
   754  0710                     u11:
   755  0710  2F14               	goto	l702
   756  0711                     u10:
   757  0711                     l700:
   758                           
   759                           ;SPEED_RACE_8.c: 101:                 PORTCbits.RC1 = 1;
   760  0711  1283               	bcf	3,5	;RP0=0, select bank0
   761  0712  1303               	bcf	3,6	;RP1=0, select bank0
   762  0713  1487               	bsf	7,1	;volatile
   763  0714                     l702:
   764                           
   765                           ;SPEED_RACE_8.c: 103:            if (cont == 2){
   766  0714  3002               	movlw	2
   767  0715  0672               	xorwf	_cont,w
   768  0716  0473               	iorwf	_cont+1,w
   769  0717  1D03               	btfss	3,2
   770  0718  2F1A               	goto	u21
   771  0719  2F1B               	goto	u20
   772  071A                     u21:
   773  071A  2F1E               	goto	l706
   774  071B                     u20:
   775  071B                     l704:
   776                           
   777                           ;SPEED_RACE_8.c: 104:                 PORTCbits.RC2 = 1;
   778  071B  1283               	bcf	3,5	;RP0=0, select bank0
   779  071C  1303               	bcf	3,6	;RP1=0, select bank0
   780  071D  1507               	bsf	7,2	;volatile
   781  071E                     l706:
   782                           
   783                           ;SPEED_RACE_8.c: 106:            if (cont == 3){
   784  071E  3003               	movlw	3
   785  071F  0672               	xorwf	_cont,w
   786  0720  0473               	iorwf	_cont+1,w
   787  0721  1D03               	btfss	3,2
   788  0722  2F24               	goto	u31
   789  0723  2F25               	goto	u30
   790  0724                     u31:
   791  0724  2F28               	goto	l710
   792  0725                     u30:
   793  0725                     l708:
   794                           
   795                           ;SPEED_RACE_8.c: 107:                 PORTCbits.RC3 = 1;
   796  0725  1283               	bcf	3,5	;RP0=0, select bank0
   797  0726  1303               	bcf	3,6	;RP1=0, select bank0
   798  0727  1587               	bsf	7,3	;volatile
   799  0728                     l710:
   800                           
   801                           ;SPEED_RACE_8.c: 109:            if (cont == 4){
   802  0728  3004               	movlw	4
   803  0729  0672               	xorwf	_cont,w
   804  072A  0473               	iorwf	_cont+1,w
   805  072B  1D03               	btfss	3,2
   806  072C  2F2E               	goto	u41
   807  072D  2F2F               	goto	u40
   808  072E                     u41:
   809  072E  2F32               	goto	l714
   810  072F                     u40:
   811  072F                     l712:
   812                           
   813                           ;SPEED_RACE_8.c: 110:                 PORTCbits.RC4 = 1;
   814  072F  1283               	bcf	3,5	;RP0=0, select bank0
   815  0730  1303               	bcf	3,6	;RP1=0, select bank0
   816  0731  1607               	bsf	7,4	;volatile
   817  0732                     l714:
   818                           
   819                           ;SPEED_RACE_8.c: 112:            if (cont == 5){
   820  0732  3005               	movlw	5
   821  0733  0672               	xorwf	_cont,w
   822  0734  0473               	iorwf	_cont+1,w
   823  0735  1D03               	btfss	3,2
   824  0736  2F38               	goto	u51
   825  0737  2F39               	goto	u50
   826  0738                     u51:
   827  0738  2F3C               	goto	l718
   828  0739                     u50:
   829  0739                     l716:
   830                           
   831                           ;SPEED_RACE_8.c: 113:                 PORTCbits.RC5 = 1;
   832  0739  1283               	bcf	3,5	;RP0=0, select bank0
   833  073A  1303               	bcf	3,6	;RP1=0, select bank0
   834  073B  1687               	bsf	7,5	;volatile
   835  073C                     l718:
   836                           
   837                           ;SPEED_RACE_8.c: 115:            if (cont == 6){
   838  073C  3006               	movlw	6
   839  073D  0672               	xorwf	_cont,w
   840  073E  0473               	iorwf	_cont+1,w
   841  073F  1D03               	btfss	3,2
   842  0740  2F42               	goto	u61
   843  0741  2F43               	goto	u60
   844  0742                     u61:
   845  0742  2F46               	goto	l722
   846  0743                     u60:
   847  0743                     l720:
   848                           
   849                           ;SPEED_RACE_8.c: 116:                 PORTCbits.RC6 = 1;
   850  0743  1283               	bcf	3,5	;RP0=0, select bank0
   851  0744  1303               	bcf	3,6	;RP1=0, select bank0
   852  0745  1707               	bsf	7,6	;volatile
   853  0746                     l722:
   854                           
   855                           ;SPEED_RACE_8.c: 118:            if (cont == 7){
   856  0746  3007               	movlw	7
   857  0747  0672               	xorwf	_cont,w
   858  0748  0473               	iorwf	_cont+1,w
   859  0749  1D03               	btfss	3,2
   860  074A  2F4C               	goto	u71
   861  074B  2F4D               	goto	u70
   862  074C                     u71:
   863  074C  2F50               	goto	l70
   864  074D                     u70:
   865  074D                     l724:
   866                           
   867                           ;SPEED_RACE_8.c: 119:                 PORTCbits.RC7 = 1;
   868  074D  1283               	bcf	3,5	;RP0=0, select bank0
   869  074E  1303               	bcf	3,6	;RP1=0, select bank0
   870  074F  1787               	bsf	7,7	;volatile
   871  0750                     l70:
   872  0750  0008               	return
   873  0751                     __end_of_PLAYER_1:
   874                           
   875                           	psect	text4
   876  06ED                     __ptext4:	
   877 ;; *************** function _LIGTHS_OUT *****************
   878 ;; Defined at:
   879 ;;		line 84 in file "SPEED_RACE_8.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   893 ;;      Params:         0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0
   895 ;;      Temps:          2       0       0       0       0
   896 ;;      Totals:         2       0       0       0       0
   897 ;;Total ram usage:        2 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           
   907                           ;psect for function _LIGTHS_OUT
   908  06ED                     _LIGTHS_OUT:
   909  06ED                     l686:	
   910                           ;incstack = 0
   911                           ; Regs used in _LIGTHS_OUT: [wreg]
   912                           
   913                           
   914                           ;SPEED_RACE_8.c: 86:         PORTBbits.RB0 = 1;
   915  06ED  1283               	bcf	3,5	;RP0=0, select bank0
   916  06EE  1303               	bcf	3,6	;RP1=0, select bank0
   917  06EF  1406               	bsf	6,0	;volatile
   918  06F0                     l688:
   919                           
   920                           ;SPEED_RACE_8.c: 87:         _delay((unsigned long)((80)*(8000000/4000.0)));
   921  06F0  30D0               	movlw	208
   922  06F1  00F5               	movwf	??_LIGTHS_OUT+1
   923  06F2  30C9               	movlw	201
   924  06F3  00F4               	movwf	??_LIGTHS_OUT
   925  06F4                     u227:
   926  06F4  0BF4               	decfsz	??_LIGTHS_OUT,f
   927  06F5  2EF4               	goto	u227
   928  06F6  0BF5               	decfsz	??_LIGTHS_OUT+1,f
   929  06F7  2EF4               	goto	u227
   930  06F8  2EF9               	nop2
   931  06F9                     l690:
   932                           
   933                           ;SPEED_RACE_8.c: 89:         PORTBbits.RB0 = 0;
   934  06F9  1283               	bcf	3,5	;RP0=0, select bank0
   935  06FA  1303               	bcf	3,6	;RP1=0, select bank0
   936  06FB  1006               	bcf	6,0	;volatile
   937  06FC                     l692:
   938                           
   939                           ;SPEED_RACE_8.c: 90:         PORTBbits.RB1 = 1;
   940  06FC  1486               	bsf	6,1	;volatile
   941                           
   942                           ;SPEED_RACE_8.c: 91:          _delay((unsigned long)((80)*(8000000/4000.0)));
   943  06FD  30D0               	movlw	208
   944  06FE  00F5               	movwf	??_LIGTHS_OUT+1
   945  06FF  30C9               	movlw	201
   946  0700  00F4               	movwf	??_LIGTHS_OUT
   947  0701                     u237:
   948  0701  0BF4               	decfsz	??_LIGTHS_OUT,f
   949  0702  2F01               	goto	u237
   950  0703  0BF5               	decfsz	??_LIGTHS_OUT+1,f
   951  0704  2F01               	goto	u237
   952  0705  2F06               	nop2
   953  0706                     l694:
   954                           
   955                           ;SPEED_RACE_8.c: 93:         PORTBbits.RB1 = 0;
   956  0706  1283               	bcf	3,5	;RP0=0, select bank0
   957  0707  1303               	bcf	3,6	;RP1=0, select bank0
   958  0708  1086               	bcf	6,1	;volatile
   959  0709                     l696:
   960                           
   961                           ;SPEED_RACE_8.c: 94:         PORTBbits.RB2 = 1;
   962  0709  1506               	bsf	6,2	;volatile
   963  070A                     l60:
   964  070A  0008               	return
   965  070B                     __end_of_LIGTHS_OUT:
   966  007E                     btemp	set	126	;btemp
   967  007E                     wtemp0	set	126
   968                           
   969                           	psect	config
   970                           
   971                           ;Config register CONFIG1 @ 0x2007
   972                           ;	Oscillator Selection bits
   973                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   974                           ;	Watchdog Timer Enable bit
   975                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   976                           ;	Power-up Timer Enable bit
   977                           ;	PWRTE = OFF, PWRT disabled
   978                           ;	RE3/MCLR pin function select bit
   979                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   980                           ;	Code Protection bit
   981                           ;	CP = OFF, Program memory code protection is disabled
   982                           ;	Data Code Protection bit
   983                           ;	CPD = OFF, Data memory code protection is disabled
   984                           ;	Brown Out Reset Selection bits
   985                           ;	BOREN = OFF, BOR disabled
   986                           ;	Internal External Switchover bit
   987                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   988                           ;	Fail-Safe Clock Monitor Enabled bit
   989                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   990                           ;	Low Voltage Programming Enable bit
   991                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   992                           ;	In-Circuit Debugger Mode bit
   993                           ;	DEBUG = 0x1, unprogrammed default
   994  2007                     	org	8199
   995  2007  20D1               	dw	8401
   996                           
   997                           ;Config register CONFIG2 @ 0x2008
   998                           ;	Brown-out Reset Selection bit
   999                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1000                           ;	Flash Program Memory Self Write Enable bits
  1001                           ;	WRT = OFF, Write protection off
  1002  2008                     	org	8200
  1003  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LIGTHS_OUT

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              2 COMMON     2     2      0
                         _LIGTHS_OUT
                           _PLAYER_1
                           _PLAYER_2
                             _config
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PLAYER_2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PLAYER_1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGTHS_OUT                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LIGTHS_OUT
   _PLAYER_1
   _PLAYER_2
   _config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jan 31 22:08:34 2021

                     l60 070A                       l70 0750                       l46 07F5  
                     l54 07F5                       l80 0796                       l57 06EC  
                     u10 0711                       u11 0710                       u20 071B  
                     u21 071A                       u30 0725                       u31 0724  
                     u40 072F                       u41 072E                       u50 0739  
                     u51 0738                       u60 0743                       u61 0742  
                     u70 074D                       u71 074C                       u80 0757  
                     u81 0756                       u90 0761                       u91 0760  
            ?_LIGTHS_OUT 0074                      l700 0711                      l710 0728  
                    l702 0714                      l720 0743                      l712 072F  
                    l704 071B                      l722 0746                      l714 0732  
                    l706 071E                      l730 075A                      l724 074D  
                    l716 0739                      l708 0725                      l740 0775  
                    l732 0761                      l718 073C                      l750 078C  
                    l742 0778                      l734 0764                      l726 0751  
                    l752 0793                      l744 077F                      l736 076B  
                    l728 0757                      l680 06E7                      l672 06DA  
                    l760 07A7                      l690 06F9                      l746 0782  
                    l738 076E                      l682 06EA                      l674 06E1  
                    l770 07C4                      l754 0797                      l692 06FC  
                    l748 0789                      l684 06EB                      l676 06E3  
                    l780 07E7                      l772 07C8                      l764 07AE  
                    l756 079C                      l694 0706                      l686 06ED  
                    l678 06E5                      l774 07D0                      l766 07B6  
                    l758 07A2                      l696 0709                      l688 06F0  
                    l776 07D5                      l768 07BC                      l698 070B  
                    l778 07DA                      u100 076B                      u101 076A  
                    u110 0775                      u111 0774                      u120 077F  
                    u200 07F4                      u121 077E                      u201 07F3  
                    u130 0789                      u131 0788                      u140 0793  
                    u141 0792                      u205 07F0                      u150 07A2  
                    u151 07A1                      u160 07AD                      u217 07B2  
                    u161 07AC                      u170 07BC                      u227 06F4  
                    u171 07BB                      u180 07C8                      u237 0701  
                    u181 07C7                      u190 07E7                      u191 07E6  
                    u195 07E3                     _cont 0072                     _main 0797  
                   btemp 007E                     start 0000                    ?_main 0074  
                  _ANSEL 0188         __end_of_PLAYER_1 0751         __end_of_PLAYER_2 0797  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _cont2 0070                    status 0003  
                  wtemp0 007E      __size_of_LIGTHS_OUT 001E          __initialization 07F8  
           __end_of_main 07F8                   ??_main 0076                   _ANSELH 0189  
                 _config 06DA  __end_of__initialization 07FC                ?_PLAYER_1 0074  
              ?_PLAYER_2 0074           __pcstackCOMMON 0074             ??_LIGTHS_OUT 0074  
     __end_of_LIGTHS_OUT 070B               ??_PLAYER_1 0074               ??_PLAYER_2 0074  
             __pmaintext 0797                  ?_config 0074          __size_of_config 0013  
                __ptext1 06DA                  __ptext2 0751                  __ptext3 070B  
                __ptext4 06ED     end_of_initialization 07FC                _PORTBbits 0006  
              _PORTCbits 0007                _PORTDbits 0008                _PORTEbits 0009  
      __size_of_PLAYER_1 0046        __size_of_PLAYER_2 0046           __end_of_config 06ED  
    start_initialization 07F8                 ??_config 0074              __pbssCOMMON 0070  
              ___latbits 0002                 _PLAYER_1 070B                 _PLAYER_2 0751  
          __size_of_main 0061               _LIGTHS_OUT 06ED  
