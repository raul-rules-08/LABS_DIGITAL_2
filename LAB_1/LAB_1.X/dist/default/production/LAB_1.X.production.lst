

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 01 00:12:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0008                     _PORTD	set	8
   206  0007                     _PORTC	set	7
   207  0006                     _PORTB	set	6
   208  0008                     _PORTDbits	set	8
   209  0007                     _PORTCbits	set	7
   210  0006                     _PORTBbits	set	6
   211  0009                     _PORTEbits	set	9
   212  0089                     _TRISE	set	137
   213  0087                     _TRISC	set	135
   214  0088                     _TRISD	set	136
   215  0086                     _TRISB	set	134
   216  0188                     _ANSEL	set	392
   217  0189                     _ANSELH	set	393
   218                           
   219                           	psect	cinit
   220  07F8                     start_initialization:	
   221                           ; #config settings
   222                           
   223  07F8                     __initialization:
   224                           
   225                           ; Clear objects allocated to COMMON
   226  07F8  01F0               	clrf	__pbssCOMMON& (0+127)
   227  07F9  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   228  07FA  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   229  07FB  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   230  07FC                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233  07FC                     __end_of__initialization:
   234  07FC  0183               	clrf	3
   235  07FD  120A  118A  2F78   	ljmp	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMMON
   238  0070                     __pbssCOMMON:
   239  0070                     _cont2:
   240  0070                     	ds	2
   241  0072                     _cont:
   242  0072                     	ds	2
   243                           
   244                           	psect	cstackCOMMON
   245  0074                     __pcstackCOMMON:
   246  0074                     ?_config:
   247  0074                     ??_config:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0074                     ?_LIGTHS_OUT:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0074                     ??_LIGTHS_OUT:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0074                     ?_PLAYER_1:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0074                     ??_PLAYER_1:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0074                     ?_PLAYER_2:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0074                     ??_PLAYER_2:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0074                     ?_main:	
   269                           ; 1 bytes @ 0x0
   270                           
   271                           
   272                           ; 1 bytes @ 0x0
   273  0074                     	ds	2
   274  0076                     ??_main:
   275                           
   276                           ; 1 bytes @ 0x2
   277  0076                     	ds	2
   278                           
   279                           	psect	maintext
   280  0778                     __pmaintext:	
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 44 in file "SPEED_RACE_8.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : B00/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   300 ;;      Params:         0       0       0       0       0
   301 ;;      Locals:         0       0       0       0       0
   302 ;;      Temps:          2       0       0       0       0
   303 ;;      Totals:         2       0       0       0       0
   304 ;;Total ram usage:        2 bytes
   305 ;; Hardware stack levels required when called:    1
   306 ;; This function calls:
   307 ;;		_LIGTHS_OUT
   308 ;;		_PLAYER_1
   309 ;;		_PLAYER_2
   310 ;;		_config
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           
   317                           ;psect for function _main
   318  0778                     _main:
   319  0778                     l769:	
   320                           ;incstack = 0
   321                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   322                           
   323                           
   324                           ;SPEED_RACE_8.c: 46:     config();
   325  0778  120A  118A  26A7  120A  118A  	fcall	_config
   326  077D                     l771:
   327                           
   328                           ;SPEED_RACE_8.c: 48:     if (PORTEbits.RE0 == 1){
   329  077D  1283               	bcf	3,5	;RP0=0, select bank0
   330  077E  1303               	bcf	3,6	;RP1=0, select bank0
   331  077F  1C09               	btfss	9,0	;volatile
   332  0780  2F82               	goto	u171
   333  0781  2F83               	goto	u170
   334  0782                     u171:
   335  0782  2FF5               	goto	l59
   336  0783                     u170:
   337  0783                     l773:
   338                           
   339                           ;SPEED_RACE_8.c: 49:         LIGTHS_OUT();
   340  0783  120A  118A  26BA  120A  118A  	fcall	_LIGTHS_OUT
   341  0788                     l775:
   342                           
   343                           ;SPEED_RACE_8.c: 50:         if(PORTBbits.RB2 == 1){
   344  0788  1283               	bcf	3,5	;RP0=0, select bank0
   345  0789  1303               	bcf	3,6	;RP1=0, select bank0
   346  078A  1D06               	btfss	6,2	;volatile
   347  078B  2F8D               	goto	u181
   348  078C  2F8E               	goto	u180
   349  078D                     u181:
   350  078D  2FF5               	goto	l59
   351  078E                     u180:
   352  078E  2FDA               	goto	l797
   353  078F                     l779:
   354                           
   355                           ;SPEED_RACE_8.c: 52:                 _delay((unsigned long)((30)*(8000000/4000.0)));
   356  078F  304E               	movlw	78
   357  0790  00F7               	movwf	??_main+1
   358  0791  30EB               	movlw	235
   359  0792  00F6               	movwf	??_main
   360  0793                     u287:
   361  0793  0BF6               	decfsz	??_main,f
   362  0794  2F93               	goto	u287
   363  0795  0BF7               	decfsz	??_main+1,f
   364  0796  2F93               	goto	u287
   365  0797                     l781:
   366                           
   367                           ;SPEED_RACE_8.c: 53:                 if (PORTCbits.RC0 == 1){
   368  0797  1283               	bcf	3,5	;RP0=0, select bank0
   369  0798  1303               	bcf	3,6	;RP1=0, select bank0
   370  0799  1C07               	btfss	7,0	;volatile
   371  079A  2F9C               	goto	u191
   372  079B  2F9D               	goto	u190
   373  079C                     u191:
   374  079C  2FA5               	goto	l785
   375  079D                     u190:
   376  079D                     l783:
   377                           
   378                           ;SPEED_RACE_8.c: 54:                     cont = cont+1;
   379  079D  0872               	movf	_cont,w
   380  079E  3E01               	addlw	1
   381  079F  00F2               	movwf	_cont
   382  07A0  0873               	movf	_cont+1,w
   383  07A1  1803               	skipnc
   384  07A2  3E01               	addlw	1
   385  07A3  3E00               	addlw	0
   386  07A4  00F3               	movwf	_cont+1
   387  07A5                     l785:
   388                           
   389                           ;SPEED_RACE_8.c: 56:                 if (PORTDbits.RD0 == 1){
   390  07A5  1C08               	btfss	8,0	;volatile
   391  07A6  2FA8               	goto	u201
   392  07A7  2FA9               	goto	u200
   393  07A8                     u201:
   394  07A8  2FB1               	goto	l50
   395  07A9                     u200:
   396  07A9                     l787:
   397                           
   398                           ;SPEED_RACE_8.c: 57:                     cont2 = cont2+1;
   399  07A9  0870               	movf	_cont2,w
   400  07AA  3E01               	addlw	1
   401  07AB  00F0               	movwf	_cont2
   402  07AC  0871               	movf	_cont2+1,w
   403  07AD  1803               	skipnc
   404  07AE  3E01               	addlw	1
   405  07AF  3E00               	addlw	0
   406  07B0  00F1               	movwf	_cont2+1
   407  07B1                     l50:	
   408                           ;SPEED_RACE_8.c: 58:                  }
   409                           
   410                           
   411                           ;SPEED_RACE_8.c: 61:                 if (PORTBbits.RB3 == 0 & PORTBbits.RB4 == 0)
   412  07B1  1E06               	btfss	6,4	;volatile
   413  07B2  2FB4               	goto	u211
   414  07B3  2FB6               	goto	u210
   415  07B4                     u211:
   416  07B4  3001               	movlw	1
   417  07B5  2FB7               	goto	u212
   418  07B6                     u210:
   419  07B6  3000               	movlw	0
   420  07B7                     u212:
   421  07B7  00F6               	movwf	??_main
   422  07B8  1D86               	btfss	6,3	;volatile
   423  07B9  2FBB               	goto	u221
   424  07BA  2FBD               	goto	u220
   425  07BB                     u221:
   426  07BB  3001               	movlw	1
   427  07BC  2FBE               	goto	u222
   428  07BD                     u220:
   429  07BD  3000               	movlw	0
   430  07BE                     u222:
   431  07BE  0576               	andwf	??_main,w
   432  07BF  3800               	iorlw	0
   433  07C0  1903               	skipnz
   434  07C1  2FC3               	goto	u231
   435  07C2  2FC4               	goto	u230
   436  07C3                     u231:
   437  07C3  2FDA               	goto	l797
   438  07C4                     u230:
   439  07C4                     l789:
   440                           
   441                           ;SPEED_RACE_8.c: 62:     {;SPEED_RACE_8.c: 63:         if (PORTBbits.RB3 == 1)
   442  07C4  1D86               	btfss	6,3	;volatile
   443  07C5  2FC7               	goto	u241
   444  07C6  2FC8               	goto	u240
   445  07C7                     u241:
   446  07C7  2FCA               	goto	l52
   447  07C8                     u240:
   448  07C8                     l791:
   449                           
   450                           ;SPEED_RACE_8.c: 64:         {;SPEED_RACE_8.c: 65:             PORTDbits.RD0 = 0;
   451  07C8  1008               	bcf	8,0	;volatile
   452                           
   453                           ;SPEED_RACE_8.c: 66:        }
   454  07C9  2FDA               	goto	l797
   455  07CA                     l52:	
   456                           ;SPEED_RACE_8.c: 67:         else if (PORTBbits.RB4 == 1)
   457                           
   458  07CA  1E06               	btfss	6,4	;volatile
   459  07CB  2FCD               	goto	u251
   460  07CC  2FCE               	goto	u250
   461  07CD                     u251:
   462  07CD  2FD0               	goto	l795
   463  07CE                     u250:
   464  07CE                     l793:
   465                           
   466                           ;SPEED_RACE_8.c: 68:        {;SPEED_RACE_8.c: 69:             PORTCbits.RC0 =0;
   467  07CE  1007               	bcf	7,0	;volatile
   468                           
   469                           ;SPEED_RACE_8.c: 70:         }
   470  07CF  2FDA               	goto	l797
   471  07D0                     l795:
   472                           
   473                           ;SPEED_RACE_8.c: 72:         {;SPEED_RACE_8.c: 73:            PLAYER_1();
   474  07D0  120A  118A  26D8  120A  118A  	fcall	_PLAYER_1
   475                           
   476                           ;SPEED_RACE_8.c: 74:            PLAYER_2();
   477  07D5  120A  118A  2728  120A  118A  	fcall	_PLAYER_2
   478  07DA                     l797:
   479                           
   480                           ;SPEED_RACE_8.c: 51:             while ( cont <= 8 && cont2 <= 8) {
   481  07DA  0873               	movf	_cont+1,w
   482  07DB  3A80               	xorlw	128
   483  07DC  00FF               	movwf	btemp+1
   484  07DD  3080               	movlw	128
   485  07DE  027F               	subwf	btemp+1,w
   486  07DF  1D03               	skipz
   487  07E0  2FE3               	goto	u265
   488  07E1  3009               	movlw	9
   489  07E2  0272               	subwf	_cont,w
   490  07E3                     u265:
   491  07E3  1803               	skipnc
   492  07E4  2FE6               	goto	u261
   493  07E5  2FE7               	goto	u260
   494  07E6                     u261:
   495  07E6  2FF5               	goto	l46
   496  07E7                     u260:
   497  07E7                     l799:
   498  07E7  0871               	movf	_cont2+1,w
   499  07E8  3A80               	xorlw	128
   500  07E9  00FF               	movwf	btemp+1
   501  07EA  3080               	movlw	128
   502  07EB  027F               	subwf	btemp+1,w
   503  07EC  1D03               	skipz
   504  07ED  2FF0               	goto	u275
   505  07EE  3009               	movlw	9
   506  07EF  0270               	subwf	_cont2,w
   507  07F0                     u275:
   508  07F0  1C03               	skipc
   509  07F1  2FF3               	goto	u271
   510  07F2  2FF4               	goto	u270
   511  07F3                     u271:
   512  07F3  2F8F               	goto	l779
   513  07F4                     u270:
   514  07F4  2FF5               	goto	l59
   515  07F5                     l46:	
   516                           ;SPEED_RACE_8.c: 79:         }
   517                           
   518  07F5                     l59:
   519  07F5  120A  118A  2800   	ljmp	start
   520  07F8                     __end_of_main:
   521                           
   522                           	psect	text1
   523  06A7                     __ptext1:	
   524 ;; *************** function _config *****************
   525 ;; Defined at:
   526 ;;		line 87 in file "SPEED_RACE_8.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, status,2
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   540 ;;      Params:         0       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0
   543 ;;      Totals:         0       0       0       0       0
   544 ;;Total ram usage:        0 bytes
   545 ;; Hardware stack levels used:    1
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           
   554                           ;psect for function _config
   555  06A7                     _config:
   556  06A7                     l679:	
   557                           ;incstack = 0
   558                           ; Regs used in _config: [wreg+status,2]
   559                           
   560                           
   561                           ;SPEED_RACE_8.c: 89:         ANSELH = 0 ;
   562  06A7  1683               	bsf	3,5	;RP0=1, select bank3
   563  06A8  1703               	bsf	3,6	;RP1=1, select bank3
   564  06A9  0189               	clrf	9	;volatile
   565                           
   566                           ;SPEED_RACE_8.c: 90:         ANSEL = 0 ;
   567  06AA  0188               	clrf	8	;volatile
   568                           
   569                           ;SPEED_RACE_8.c: 91:         TRISB = 0 ;
   570  06AB  1683               	bsf	3,5	;RP0=1, select bank1
   571  06AC  1303               	bcf	3,6	;RP1=0, select bank1
   572  06AD  0186               	clrf	6	;volatile
   573  06AE                     l681:
   574                           
   575                           ;SPEED_RACE_8.c: 92:         TRISD = 0b00000001;
   576  06AE  3001               	movlw	1
   577  06AF  0088               	movwf	8	;volatile
   578  06B0                     l683:
   579                           
   580                           ;SPEED_RACE_8.c: 93:         TRISC = 0b00000001;
   581  06B0  3001               	movlw	1
   582  06B1  0087               	movwf	7	;volatile
   583  06B2                     l685:
   584                           
   585                           ;SPEED_RACE_8.c: 94:         TRISE = 0b001 ;
   586  06B2  3001               	movlw	1
   587  06B3  0089               	movwf	9	;volatile
   588  06B4                     l687:
   589                           
   590                           ;SPEED_RACE_8.c: 95:         PORTB = 0 ;
   591  06B4  1283               	bcf	3,5	;RP0=0, select bank0
   592  06B5  1303               	bcf	3,6	;RP1=0, select bank0
   593  06B6  0186               	clrf	6	;volatile
   594  06B7                     l689:
   595                           
   596                           ;SPEED_RACE_8.c: 96:         PORTC = 0 ;
   597  06B7  0187               	clrf	7	;volatile
   598  06B8                     l691:
   599                           
   600                           ;SPEED_RACE_8.c: 97:         PORTD = 0 ;
   601  06B8  0188               	clrf	8	;volatile
   602  06B9                     l62:
   603  06B9  0008               	return
   604  06BA                     __end_of_config:
   605                           
   606                           	psect	text2
   607  0728                     __ptext2:	
   608 ;; *************** function _PLAYER_2 *****************
   609 ;; Defined at:
   610 ;;		line 142 in file "SPEED_RACE_8.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, status,2, status,0
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   624 ;;      Params:         0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0
   627 ;;      Totals:         0       0       0       0       0
   628 ;;Total ram usage:        0 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; This function calls:
   631 ;;		Nothing
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           
   638                           ;psect for function _PLAYER_2
   639  0728                     _PLAYER_2:
   640  0728                     l737:	
   641                           ;incstack = 0
   642                           ; Regs used in _PLAYER_2: [wreg+status,2+status,0]
   643                           
   644                           
   645                           ;SPEED_RACE_8.c: 144:             if (cont2 == 1){
   646  0728  0370               	decf	_cont2,w
   647  0729  0471               	iorwf	_cont2+1,w
   648  072A  1D03               	btfss	3,2
   649  072B  2F2D               	goto	u91
   650  072C  2F2E               	goto	u90
   651  072D                     u91:
   652  072D  2F31               	goto	l741
   653  072E                     u90:
   654  072E                     l739:
   655                           
   656                           ;SPEED_RACE_8.c: 145:                 PORTDbits.RD1 = 1;
   657  072E  1283               	bcf	3,5	;RP0=0, select bank0
   658  072F  1303               	bcf	3,6	;RP1=0, select bank0
   659  0730  1488               	bsf	8,1	;volatile
   660  0731                     l741:
   661                           
   662                           ;SPEED_RACE_8.c: 147:             if (cont2 == 2){
   663  0731  3002               	movlw	2
   664  0732  0670               	xorwf	_cont2,w
   665  0733  0471               	iorwf	_cont2+1,w
   666  0734  1D03               	btfss	3,2
   667  0735  2F37               	goto	u101
   668  0736  2F38               	goto	u100
   669  0737                     u101:
   670  0737  2F3B               	goto	l745
   671  0738                     u100:
   672  0738                     l743:
   673                           
   674                           ;SPEED_RACE_8.c: 148:                 PORTDbits.RD2 = 1;
   675  0738  1283               	bcf	3,5	;RP0=0, select bank0
   676  0739  1303               	bcf	3,6	;RP1=0, select bank0
   677  073A  1508               	bsf	8,2	;volatile
   678  073B                     l745:
   679                           
   680                           ;SPEED_RACE_8.c: 150:             if (cont2 == 3){
   681  073B  3003               	movlw	3
   682  073C  0670               	xorwf	_cont2,w
   683  073D  0471               	iorwf	_cont2+1,w
   684  073E  1D03               	btfss	3,2
   685  073F  2F41               	goto	u111
   686  0740  2F42               	goto	u110
   687  0741                     u111:
   688  0741  2F45               	goto	l749
   689  0742                     u110:
   690  0742                     l747:
   691                           
   692                           ;SPEED_RACE_8.c: 151:                 PORTDbits.RD3 = 1;
   693  0742  1283               	bcf	3,5	;RP0=0, select bank0
   694  0743  1303               	bcf	3,6	;RP1=0, select bank0
   695  0744  1588               	bsf	8,3	;volatile
   696  0745                     l749:
   697                           
   698                           ;SPEED_RACE_8.c: 153:             if (cont2 == 4){
   699  0745  3004               	movlw	4
   700  0746  0670               	xorwf	_cont2,w
   701  0747  0471               	iorwf	_cont2+1,w
   702  0748  1D03               	btfss	3,2
   703  0749  2F4B               	goto	u121
   704  074A  2F4C               	goto	u120
   705  074B                     u121:
   706  074B  2F4F               	goto	l753
   707  074C                     u120:
   708  074C                     l751:
   709                           
   710                           ;SPEED_RACE_8.c: 154:                 PORTDbits.RD4 = 1;
   711  074C  1283               	bcf	3,5	;RP0=0, select bank0
   712  074D  1303               	bcf	3,6	;RP1=0, select bank0
   713  074E  1608               	bsf	8,4	;volatile
   714  074F                     l753:
   715                           
   716                           ;SPEED_RACE_8.c: 156:             if (cont2 == 5){
   717  074F  3005               	movlw	5
   718  0750  0670               	xorwf	_cont2,w
   719  0751  0471               	iorwf	_cont2+1,w
   720  0752  1D03               	btfss	3,2
   721  0753  2F55               	goto	u131
   722  0754  2F56               	goto	u130
   723  0755                     u131:
   724  0755  2F59               	goto	l757
   725  0756                     u130:
   726  0756                     l755:
   727                           
   728                           ;SPEED_RACE_8.c: 157:                 PORTDbits.RD5 = 1;
   729  0756  1283               	bcf	3,5	;RP0=0, select bank0
   730  0757  1303               	bcf	3,6	;RP1=0, select bank0
   731  0758  1688               	bsf	8,5	;volatile
   732  0759                     l757:
   733                           
   734                           ;SPEED_RACE_8.c: 159:             if (cont2 == 6){
   735  0759  3006               	movlw	6
   736  075A  0670               	xorwf	_cont2,w
   737  075B  0471               	iorwf	_cont2+1,w
   738  075C  1D03               	btfss	3,2
   739  075D  2F5F               	goto	u141
   740  075E  2F60               	goto	u140
   741  075F                     u141:
   742  075F  2F63               	goto	l761
   743  0760                     u140:
   744  0760                     l759:
   745                           
   746                           ;SPEED_RACE_8.c: 160:                 PORTDbits.RD6 = 1;
   747  0760  1283               	bcf	3,5	;RP0=0, select bank0
   748  0761  1303               	bcf	3,6	;RP1=0, select bank0
   749  0762  1708               	bsf	8,6	;volatile
   750  0763                     l761:
   751                           
   752                           ;SPEED_RACE_8.c: 162:             if (cont2 == 7){
   753  0763  3007               	movlw	7
   754  0764  0670               	xorwf	_cont2,w
   755  0765  0471               	iorwf	_cont2+1,w
   756  0766  1D03               	btfss	3,2
   757  0767  2F69               	goto	u151
   758  0768  2F6A               	goto	u150
   759  0769                     u151:
   760  0769  2F6D               	goto	l765
   761  076A                     u150:
   762  076A                     l763:
   763                           
   764                           ;SPEED_RACE_8.c: 163:                 PORTDbits.RD7 = 1;
   765  076A  1283               	bcf	3,5	;RP0=0, select bank0
   766  076B  1303               	bcf	3,6	;RP1=0, select bank0
   767  076C  1788               	bsf	8,7	;volatile
   768  076D                     l765:
   769                           
   770                           ;SPEED_RACE_8.c: 165:            if (cont2 == 8){
   771  076D  3008               	movlw	8
   772  076E  0670               	xorwf	_cont2,w
   773  076F  0471               	iorwf	_cont2+1,w
   774  0770  1D03               	btfss	3,2
   775  0771  2F73               	goto	u161
   776  0772  2F74               	goto	u160
   777  0773                     u161:
   778  0773  2F77               	goto	l87
   779  0774                     u160:
   780  0774                     l767:
   781                           
   782                           ;SPEED_RACE_8.c: 166:                 PORTBbits.RB4 = 1;
   783  0774  1283               	bcf	3,5	;RP0=0, select bank0
   784  0775  1303               	bcf	3,6	;RP1=0, select bank0
   785  0776  1606               	bsf	6,4	;volatile
   786  0777                     l87:
   787  0777  0008               	return
   788  0778                     __end_of_PLAYER_2:
   789                           
   790                           	psect	text3
   791  06D8                     __ptext3:	
   792 ;; *************** function _PLAYER_1 *****************
   793 ;; Defined at:
   794 ;;		line 114 in file "SPEED_RACE_8.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;		None
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, status,2, status,0
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   808 ;;      Params:         0       0       0       0       0
   809 ;;      Locals:         0       0       0       0       0
   810 ;;      Temps:          0       0       0       0       0
   811 ;;      Totals:         0       0       0       0       0
   812 ;;Total ram usage:        0 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; This function calls:
   815 ;;		Nothing
   816 ;; This function is called by:
   817 ;;		_main
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           
   822                           ;psect for function _PLAYER_1
   823  06D8                     _PLAYER_1:
   824  06D8                     l705:	
   825                           ;incstack = 0
   826                           ; Regs used in _PLAYER_1: [wreg+status,2+status,0]
   827                           
   828                           
   829                           ;SPEED_RACE_8.c: 116:            if (cont == 1){
   830  06D8  0372               	decf	_cont,w
   831  06D9  0473               	iorwf	_cont+1,w
   832  06DA  1D03               	btfss	3,2
   833  06DB  2EDD               	goto	u11
   834  06DC  2EDE               	goto	u10
   835  06DD                     u11:
   836  06DD  2EE1               	goto	l709
   837  06DE                     u10:
   838  06DE                     l707:
   839                           
   840                           ;SPEED_RACE_8.c: 117:                 PORTCbits.RC1 = 1;
   841  06DE  1283               	bcf	3,5	;RP0=0, select bank0
   842  06DF  1303               	bcf	3,6	;RP1=0, select bank0
   843  06E0  1487               	bsf	7,1	;volatile
   844  06E1                     l709:
   845                           
   846                           ;SPEED_RACE_8.c: 119:            if (cont == 2){
   847  06E1  3002               	movlw	2
   848  06E2  0672               	xorwf	_cont,w
   849  06E3  0473               	iorwf	_cont+1,w
   850  06E4  1D03               	btfss	3,2
   851  06E5  2EE7               	goto	u21
   852  06E6  2EE8               	goto	u20
   853  06E7                     u21:
   854  06E7  2EEB               	goto	l713
   855  06E8                     u20:
   856  06E8                     l711:
   857                           
   858                           ;SPEED_RACE_8.c: 120:                 PORTCbits.RC2 = 1;
   859  06E8  1283               	bcf	3,5	;RP0=0, select bank0
   860  06E9  1303               	bcf	3,6	;RP1=0, select bank0
   861  06EA  1507               	bsf	7,2	;volatile
   862  06EB                     l713:
   863                           
   864                           ;SPEED_RACE_8.c: 122:            if (cont == 3){
   865  06EB  3003               	movlw	3
   866  06EC  0672               	xorwf	_cont,w
   867  06ED  0473               	iorwf	_cont+1,w
   868  06EE  1D03               	btfss	3,2
   869  06EF  2EF1               	goto	u31
   870  06F0  2EF2               	goto	u30
   871  06F1                     u31:
   872  06F1  2EF5               	goto	l717
   873  06F2                     u30:
   874  06F2                     l715:
   875                           
   876                           ;SPEED_RACE_8.c: 123:                 PORTCbits.RC3 = 1;
   877  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   878  06F3  1303               	bcf	3,6	;RP1=0, select bank0
   879  06F4  1587               	bsf	7,3	;volatile
   880  06F5                     l717:
   881                           
   882                           ;SPEED_RACE_8.c: 125:            if (cont == 4){
   883  06F5  3004               	movlw	4
   884  06F6  0672               	xorwf	_cont,w
   885  06F7  0473               	iorwf	_cont+1,w
   886  06F8  1D03               	btfss	3,2
   887  06F9  2EFB               	goto	u41
   888  06FA  2EFC               	goto	u40
   889  06FB                     u41:
   890  06FB  2EFF               	goto	l721
   891  06FC                     u40:
   892  06FC                     l719:
   893                           
   894                           ;SPEED_RACE_8.c: 126:                 PORTCbits.RC4 = 1;
   895  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   896  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   897  06FE  1607               	bsf	7,4	;volatile
   898  06FF                     l721:
   899                           
   900                           ;SPEED_RACE_8.c: 128:            if (cont == 5){
   901  06FF  3005               	movlw	5
   902  0700  0672               	xorwf	_cont,w
   903  0701  0473               	iorwf	_cont+1,w
   904  0702  1D03               	btfss	3,2
   905  0703  2F05               	goto	u51
   906  0704  2F06               	goto	u50
   907  0705                     u51:
   908  0705  2F09               	goto	l725
   909  0706                     u50:
   910  0706                     l723:
   911                           
   912                           ;SPEED_RACE_8.c: 129:                 PORTCbits.RC5 = 1;
   913  0706  1283               	bcf	3,5	;RP0=0, select bank0
   914  0707  1303               	bcf	3,6	;RP1=0, select bank0
   915  0708  1687               	bsf	7,5	;volatile
   916  0709                     l725:
   917                           
   918                           ;SPEED_RACE_8.c: 131:            if (cont == 6){
   919  0709  3006               	movlw	6
   920  070A  0672               	xorwf	_cont,w
   921  070B  0473               	iorwf	_cont+1,w
   922  070C  1D03               	btfss	3,2
   923  070D  2F0F               	goto	u61
   924  070E  2F10               	goto	u60
   925  070F                     u61:
   926  070F  2F13               	goto	l729
   927  0710                     u60:
   928  0710                     l727:
   929                           
   930                           ;SPEED_RACE_8.c: 132:                 PORTCbits.RC6 = 1;
   931  0710  1283               	bcf	3,5	;RP0=0, select bank0
   932  0711  1303               	bcf	3,6	;RP1=0, select bank0
   933  0712  1707               	bsf	7,6	;volatile
   934  0713                     l729:
   935                           
   936                           ;SPEED_RACE_8.c: 134:            if (cont == 7){
   937  0713  3007               	movlw	7
   938  0714  0672               	xorwf	_cont,w
   939  0715  0473               	iorwf	_cont+1,w
   940  0716  1D03               	btfss	3,2
   941  0717  2F19               	goto	u71
   942  0718  2F1A               	goto	u70
   943  0719                     u71:
   944  0719  2F1D               	goto	l733
   945  071A                     u70:
   946  071A                     l731:
   947                           
   948                           ;SPEED_RACE_8.c: 135:                 PORTCbits.RC7 = 1;
   949  071A  1283               	bcf	3,5	;RP0=0, select bank0
   950  071B  1303               	bcf	3,6	;RP1=0, select bank0
   951  071C  1787               	bsf	7,7	;volatile
   952  071D                     l733:
   953                           
   954                           ;SPEED_RACE_8.c: 137:            if (cont == 8){
   955  071D  3008               	movlw	8
   956  071E  0672               	xorwf	_cont,w
   957  071F  0473               	iorwf	_cont+1,w
   958  0720  1D03               	btfss	3,2
   959  0721  2F23               	goto	u81
   960  0722  2F24               	goto	u80
   961  0723                     u81:
   962  0723  2F27               	goto	l76
   963  0724                     u80:
   964  0724                     l735:
   965                           
   966                           ;SPEED_RACE_8.c: 138:                 PORTBbits.RB3 = 1;
   967  0724  1283               	bcf	3,5	;RP0=0, select bank0
   968  0725  1303               	bcf	3,6	;RP1=0, select bank0
   969  0726  1586               	bsf	6,3	;volatile
   970  0727                     l76:
   971  0727  0008               	return
   972  0728                     __end_of_PLAYER_1:
   973                           
   974                           	psect	text4
   975  06BA                     __ptext4:	
   976 ;; *************** function _LIGTHS_OUT *****************
   977 ;; Defined at:
   978 ;;		line 100 in file "SPEED_RACE_8.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0
   994 ;;      Temps:          2       0       0       0       0
   995 ;;      Totals:         2       0       0       0       0
   996 ;;Total ram usage:        2 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_main
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           
  1006                           ;psect for function _LIGTHS_OUT
  1007  06BA                     _LIGTHS_OUT:
  1008  06BA                     l693:	
  1009                           ;incstack = 0
  1010                           ; Regs used in _LIGTHS_OUT: [wreg]
  1011                           
  1012                           
  1013                           ;SPEED_RACE_8.c: 102:         PORTBbits.RB0 = 1;
  1014  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  1015  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  1016  06BC  1406               	bsf	6,0	;volatile
  1017  06BD                     l695:
  1018                           
  1019                           ;SPEED_RACE_8.c: 103:         _delay((unsigned long)((80)*(8000000/4000.0)));
  1020  06BD  30D0               	movlw	208
  1021  06BE  00F5               	movwf	??_LIGTHS_OUT+1
  1022  06BF  30C9               	movlw	201
  1023  06C0  00F4               	movwf	??_LIGTHS_OUT
  1024  06C1                     u297:
  1025  06C1  0BF4               	decfsz	??_LIGTHS_OUT,f
  1026  06C2  2EC1               	goto	u297
  1027  06C3  0BF5               	decfsz	??_LIGTHS_OUT+1,f
  1028  06C4  2EC1               	goto	u297
  1029  06C5  2EC6               	nop2
  1030  06C6                     l697:
  1031                           
  1032                           ;SPEED_RACE_8.c: 105:         PORTBbits.RB0 = 0;
  1033  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  1034  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  1035  06C8  1006               	bcf	6,0	;volatile
  1036  06C9                     l699:
  1037                           
  1038                           ;SPEED_RACE_8.c: 106:         PORTBbits.RB1 = 1;
  1039  06C9  1486               	bsf	6,1	;volatile
  1040                           
  1041                           ;SPEED_RACE_8.c: 107:          _delay((unsigned long)((80)*(8000000/4000.0)));
  1042  06CA  30D0               	movlw	208
  1043  06CB  00F5               	movwf	??_LIGTHS_OUT+1
  1044  06CC  30C9               	movlw	201
  1045  06CD  00F4               	movwf	??_LIGTHS_OUT
  1046  06CE                     u307:
  1047  06CE  0BF4               	decfsz	??_LIGTHS_OUT,f
  1048  06CF  2ECE               	goto	u307
  1049  06D0  0BF5               	decfsz	??_LIGTHS_OUT+1,f
  1050  06D1  2ECE               	goto	u307
  1051  06D2  2ED3               	nop2
  1052  06D3                     l701:
  1053                           
  1054                           ;SPEED_RACE_8.c: 109:         PORTBbits.RB1 = 0;
  1055  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1056  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1057  06D5  1086               	bcf	6,1	;volatile
  1058  06D6                     l703:
  1059                           
  1060                           ;SPEED_RACE_8.c: 110:         PORTBbits.RB2 = 1;
  1061  06D6  1506               	bsf	6,2	;volatile
  1062  06D7                     l65:
  1063  06D7  0008               	return
  1064  06D8                     __end_of_LIGTHS_OUT:
  1065  007E                     btemp	set	126	;btemp
  1066  007E                     wtemp0	set	126
  1067                           
  1068                           	psect	config
  1069                           
  1070                           ;Config register CONFIG1 @ 0x2007
  1071                           ;	Oscillator Selection bits
  1072                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1073                           ;	Watchdog Timer Enable bit
  1074                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1075                           ;	Power-up Timer Enable bit
  1076                           ;	PWRTE = OFF, PWRT disabled
  1077                           ;	RE3/MCLR pin function select bit
  1078                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1079                           ;	Code Protection bit
  1080                           ;	CP = OFF, Program memory code protection is disabled
  1081                           ;	Data Code Protection bit
  1082                           ;	CPD = OFF, Data memory code protection is disabled
  1083                           ;	Brown Out Reset Selection bits
  1084                           ;	BOREN = OFF, BOR disabled
  1085                           ;	Internal External Switchover bit
  1086                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1087                           ;	Fail-Safe Clock Monitor Enabled bit
  1088                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1089                           ;	Low Voltage Programming Enable bit
  1090                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1091                           ;	In-Circuit Debugger Mode bit
  1092                           ;	DEBUG = 0x1, unprogrammed default
  1093  2007                     	org	8199
  1094  2007  20D1               	dw	8401
  1095                           
  1096                           ;Config register CONFIG2 @ 0x2008
  1097                           ;	Brown-out Reset Selection bit
  1098                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1099                           ;	Flash Program Memory Self Write Enable bits
  1100                           ;	WRT = OFF, Write protection off
  1101  2008                     	org	8200
  1102  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LIGTHS_OUT

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              2 COMMON     2     2      0
                         _LIGTHS_OUT
                           _PLAYER_1
                           _PLAYER_2
                             _config
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PLAYER_2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PLAYER_1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LIGTHS_OUT                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LIGTHS_OUT
   _PLAYER_1
   _PLAYER_2
   _config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 01 00:12:32 2021

                     l50 07B1                       l52 07CA                       l62 06B9  
                     l46 07F5                       l65 06D7                       l59 07F5  
                     l76 0727                       l87 0777                       u10 06DE  
                     u11 06DD                       u20 06E8                       u21 06E7  
                     u30 06F2                       u31 06F1                       u40 06FC  
                     u41 06FB                       u50 0706                       u51 0705  
                     u60 0710                       u61 070F                       u70 071A  
                     u71 0719                       u80 0724                       u81 0723  
                     u90 072E                       u91 072D              ?_LIGTHS_OUT 0074  
                    l701 06D3                      l703 06D6                      l711 06E8  
                    l721 06FF                      l713 06EB                      l705 06D8  
                    l731 071A                      l723 0706                      l715 06F2  
                    l707 06DE                      l733 071D                      l725 0709  
                    l717 06F5                      l709 06E1                      l741 0731  
                    l735 0724                      l727 0710                      l719 06FC  
                    l751 074C                      l743 0738                      l729 0713  
                    l761 0763                      l753 074F                      l745 073B  
                    l737 0728                      l681 06AE                      l763 076A  
                    l755 0756                      l747 0742                      l739 072E  
                    l691 06B8                      l683 06B0                      l771 077D  
                    l693 06BA                      l765 076D                      l757 0759  
                    l749 0745                      l685 06B2                      l781 0797  
                    l773 0783                      l695 06BD                      l767 0774  
                    l759 0760                      l687 06B4                      l679 06A7  
                    l791 07C8                      l783 079D                      l775 0788  
                    l697 06C6                      l689 06B7                      l793 07CE  
                    l785 07A5                      l769 0778                      l699 06C9  
                    l795 07D0                      l787 07A9                      l779 078F  
                    l789 07C4                      l797 07DA                      l799 07E7  
                    u100 0738                      u101 0737                      u110 0742  
                    u111 0741                      u120 074C                      u200 07A9  
                    u121 074B                      u201 07A8                      u130 0756  
                    u210 07B6                      u131 0755                      u211 07B4  
                    u140 0760                      u220 07BD                      u212 07B7  
                    u141 075F                      u221 07BB                      u150 076A  
                    u230 07C4                      u222 07BE                      u151 0769  
                    u231 07C3                      u160 0774                      u240 07C8  
                    u161 0773                      u241 07C7                      u250 07CE  
                    u170 0783                      u307 06CE                      u251 07CD  
                    u171 0782                      u260 07E7                      u180 078E  
                    u261 07E6                      u181 078D                      u270 07F4  
                    u190 079D                      u271 07F3                      u191 079C  
                    u265 07E3                      u275 07F0                      u287 0793  
                    u297 06C1                     _cont 0072                     _main 0778  
                   btemp 007E                     start 0000                    ?_main 0074  
                  _ANSEL 0188         __end_of_PLAYER_1 0728         __end_of_PLAYER_2 0778  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _cont2 0070                    status 0003  
                  wtemp0 007E      __size_of_LIGTHS_OUT 001E          __initialization 07F8  
           __end_of_main 07F8                   ??_main 0076                   _ANSELH 0189  
                 _config 06A7  __end_of__initialization 07FC                ?_PLAYER_1 0074  
              ?_PLAYER_2 0074           __pcstackCOMMON 0074             ??_LIGTHS_OUT 0074  
     __end_of_LIGTHS_OUT 06D8               ??_PLAYER_1 0074               ??_PLAYER_2 0074  
             __pmaintext 0778                  ?_config 0074          __size_of_config 0013  
                __ptext1 06A7                  __ptext2 0728                  __ptext3 06D8  
                __ptext4 06BA     end_of_initialization 07FC                _PORTBbits 0006  
              _PORTCbits 0007                _PORTDbits 0008                _PORTEbits 0009  
      __size_of_PLAYER_1 0050        __size_of_PLAYER_2 0050           __end_of_config 06BA  
    start_initialization 07F8                 ??_config 0074              __pbssCOMMON 0070  
              ___latbits 0002                 _PLAYER_1 06D8                 _PLAYER_2 0728  
          __size_of_main 0080               _LIGTHS_OUT 06BA  
